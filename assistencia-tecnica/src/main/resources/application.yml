spring:
  application:
    name: assistencia-tecnica
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:assistencia_tecnica_db}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER:assistenciatecnica}
    password: ${DB_PASS:assistencia@tecnica2025}

  jpa:
    hibernate:
      ddl-auto: create   # Flyway controla o schema; use 'none' se não quiser validar.
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

docs:
  output-dir: "/var/app/docs/saidas"                      # onde salvar os PDFs gerados
  templates:
    service-order: "classpath:static/solicitacao_assistencia_tecnica.docx"
    testes-iniciais: "classpath:static/mca1896_testes.docx"
    solicitacao-assistencia-tecnica: "classpath:static/msolicitacao_assistencia_tecnica.docx"
    # você pode adicionar outros:
    # budget: "classpath:static/modelo-orcamento.docx"

mail:
  from: ${MAIL_FROM:${spring.mail.username}}

server:
  port: ${PORTA_API:8080}

